local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")

local function containsHttp(str)
    return string.find(str:lower(), "http") ~= nil
end

local function handleSuspiciousActivity(message)
    game.Players.LocalPlayer:Kick("You Are Spying And Sabotaging Our Script, Please Turn It Off! " .. message)
    while true do task.wait() end
end

local function checkUIElements(parent)
    for _, element in pairs(parent:GetChildren()) do
        -- Check element names for HTTP
        if containsHttp(element.Name) then
            element:Destroy()
            handleSuspiciousActivity("HTTP Detected in UI Element Name!")
        end

        -- Check if element is one of the UI types
        if (element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") or element:IsA("Message")) then
            if containsHttp(element.Text) then
                element:Destroy()
                handleSuspiciousActivity("HTTP Detected in UI Element Text!")
            end
        end
    end
end

local function monitorCoreGui()
    while true do
        checkUIElements(CoreGui)
        task.wait(1)  
    end
end

local function monitorNewPlayerGui()
    Players.PlayerAdded:Connect(function(player)
        player.ChildAdded:Connect(function(child)
            if child:IsA("ScreenGui") then
                checkUIElements(child)
            end
        end)
    end)
end

local function monitorScripts()
    for _, script in pairs(game:GetDescendants()) do
        if script:IsA("Script") or script:IsA("LocalScript") then
            local scriptSource = script.Source
            if containsHttp(scriptSource) then
                handleSuspiciousActivity("HTTP Request Detected in Script!")
            end
        end
    end
end

local function monitorModules()
    for _, module in pairs(ReplicatedStorage:GetChildren()) do
        if module:IsA("ModuleScript") then
            local moduleSource = module.Source
            if containsHttp(moduleSource) then
                handleSuspiciousActivity("HTTP Request Detected in Module!")
            end
        end
    end
end

local function monitorRemoteEvents()
    local function detectHttpInMessage(message)
        if containsHttp(message) then
            handleSuspiciousActivity("HTTP Detected in RemoteEvent!")
        end
    end

    for _, remote in pairs(ReplicatedStorage:GetChildren()) do
        if remote:IsA("RemoteEvent") or remote:IsA("RemoteFunction") then
            remote.OnServerEvent:Connect(function(player, message)
                detectHttpInMessage(message)
            end)
        end
    end
end

-- Start all monitoring functions in separate threads
spawn(function() monitorCoreGui() end)
spawn(function() monitorNewPlayerGui() end)
spawn(function() monitorScripts() end)
spawn(function() monitorModules() end)
spawn(function() monitorRemoteEvents() end)
